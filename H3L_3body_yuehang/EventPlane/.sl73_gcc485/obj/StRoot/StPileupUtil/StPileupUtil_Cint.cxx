//
// File generated by rootcint at Mon Jul 12 02:37:12 2021

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStPileupUtildIStPileupUtil_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StPileupUtil_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StPileupUtil_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StPileupUtil(void *p = 0);
   static void *newArray_StPileupUtil(Long_t size, void *p);
   static void delete_StPileupUtil(void *p);
   static void deleteArray_StPileupUtil(void *p);
   static void destruct_StPileupUtil(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StPileupUtil*)
   {
      ::StPileupUtil *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StPileupUtil >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StPileupUtil", ::StPileupUtil::Class_Version(), ".sl73_gcc485/obj/StRoot/StPileupUtil/StPileupUtil.h", 17,
                  typeid(::StPileupUtil), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StPileupUtil::Dictionary, isa_proxy, 4,
                  sizeof(::StPileupUtil) );
      instance.SetNew(&new_StPileupUtil);
      instance.SetNewArray(&newArray_StPileupUtil);
      instance.SetDelete(&delete_StPileupUtil);
      instance.SetDeleteArray(&deleteArray_StPileupUtil);
      instance.SetDestructor(&destruct_StPileupUtil);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StPileupUtil*)
   {
      return GenerateInitInstanceLocal((::StPileupUtil*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StPileupUtil*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StPileupUtil::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StPileupUtil::Class_Name()
{
   return "StPileupUtil";
}

//______________________________________________________________________________
const char *StPileupUtil::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPileupUtil*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StPileupUtil::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPileupUtil*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StPileupUtil::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPileupUtil*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StPileupUtil::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPileupUtil*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StPileupUtil::Streamer(TBuffer &R__b)
{
   // Stream an object of class StPileupUtil.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StPileupUtil::Class(),this);
   } else {
      R__b.WriteClassBuffer(StPileupUtil::Class(),this);
   }
}

//______________________________________________________________________________
void StPileupUtil::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StPileupUtil.
      TClass *R__cl = ::StPileupUtil::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_refMultPrim", &m_refMultPrim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nch", &m_nch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nmipsum", &m_nmipsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_goodRuns", (void*)&m_goodRuns);
      R__insp.InspectMember("vector<int>", (void*)&m_goodRuns, "m_goodRuns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_centCuts", (void*)&m_centCuts);
      R__insp.InspectMember("vector<int>", (void*)&m_centCuts, "m_centCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nchaBins", (void*)&m_nchaBins);
      R__insp.InspectMember("vector<int>", (void*)&m_nchaBins, "m_nchaBins.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nchbBins", (void*)&m_nchbBins);
      R__insp.InspectMember("vector<int>", (void*)&m_nchbBins, "m_nchbBins.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_hpucuts_default", &m_hpucuts_default);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_hpucuts_fifty", &m_hpucuts_fifty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_hpucuts_eighty", &m_hpucuts_eighty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_hpucuts_ninty", &m_hpucuts_ninty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_hreweight", &m_hreweight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kBadEventCentrality", &kBadEventCentrality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kBadEventPileup", &kBadEventPileup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEpdGeom", &mEpdGeom);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StPileupUtil(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPileupUtil : new ::StPileupUtil;
   }
   static void *newArray_StPileupUtil(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPileupUtil[nElements] : new ::StPileupUtil[nElements];
   }
   // Wrapper around operator delete
   static void delete_StPileupUtil(void *p) {
      delete ((::StPileupUtil*)p);
   }
   static void deleteArray_StPileupUtil(void *p) {
      delete [] ((::StPileupUtil*)p);
   }
   static void destruct_StPileupUtil(void *p) {
      typedef ::StPileupUtil current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StPileupUtil

/********************************************************
* .sl73_gcc485/obj/StRoot/StPileupUtil/StPileupUtil_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStPileupUtil_Cint();

extern "C" void G__set_cpp_environmentStPileupUtil_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StPileupUtil.h");
  G__cpp_reset_tagtableStPileupUtil_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStPileupUtil_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StPileupUtil */
static int G__StPileupUtil_Cint_259_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPileupUtil* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPileupUtil[n];
     } else {
       p = new((void*) gvp) StPileupUtil[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPileupUtil;
     } else {
       p = new((void*) gvp) StPileupUtil;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StPileupUtil*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StPileupUtil*) G__getstructoffset())->initEvent((StPicoDst*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPileupUtil*) G__getstructoffset())->get_centrality16());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPileupUtil*) G__getstructoffset())->get_centrality9());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPileupUtil*) G__getstructoffset())->get_centralityWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const StPileupUtil*) G__getstructoffset())->isPileupEPD((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const StPileupUtil*) G__getstructoffset())->isPileupEPD());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPileupUtil*) G__getstructoffset())->get_refMultPrim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StPileupUtil*) G__getstructoffset())->get_nmipsum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPileupUtil*) G__getstructoffset())->get_nch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StPileupUtil::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPileupUtil::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StPileupUtil::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StPileupUtil::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StPileupUtil*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPileupUtil*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPileupUtil*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPileupUtil*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPileupUtil::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPileupUtil::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPileupUtil::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StPileupUtil_Cint_259_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPileupUtil::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StPileupUtil_Cint_259_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StPileupUtil* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StPileupUtil(*(StPileupUtil*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StPileupUtil G__TStPileupUtil;
static int G__StPileupUtil_Cint_259_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StPileupUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StPileupUtil*) (soff+(sizeof(StPileupUtil)*i)))->~G__TStPileupUtil();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StPileupUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StPileupUtil*) (soff))->~G__TStPileupUtil();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StPileupUtil_Cint_259_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPileupUtil* dest = (StPileupUtil*) G__getstructoffset();
   *dest = *(StPileupUtil*) libp->para[0].ref;
   const StPileupUtil& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StPileupUtil */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStPileupUtil_Cint {
 public:
  G__Sizep2memfuncStPileupUtil_Cint(): p(&G__Sizep2memfuncStPileupUtil_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStPileupUtil_Cint::*p)();
};

size_t G__get_sizep2memfuncStPileupUtil_Cint()
{
  G__Sizep2memfuncStPileupUtil_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStPileupUtil_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStPileupUtil_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StPileupUtil */
static void G__setup_memvarStPileupUtil(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil));
   { StPileupUtil *p; p=(StPileupUtil*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_refMultPrim=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_nch=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"m_nmipsum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_goodRuns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_centCuts=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_nchaBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_nchbBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TH1F),-1,-1,4,"m_hpucuts_default=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TH1F),-1,-1,4,"m_hpucuts_fifty=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TH1F),-1,-1,4,"m_hpucuts_eighty=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TH1F),-1,-1,4,"m_hpucuts_ninty=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TH1F),-1,-1,4,"m_hreweight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"kBadEventCentrality=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"kBadEventPileup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_StEpdGeom),-1,-1,4,"mEpdGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StPileupUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStPileupUtil_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStPileupUtil(void) {
   /* StPileupUtil */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil));
   G__memfunc_setup("StPileupUtil",1236,G__StPileupUtil_Cint_259_0_1, 105, G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__StPileupUtil_Cint_259_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEvent",950,G__StPileupUtil_Cint_259_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'StPicoDst' - 10 - pico", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_centrality16",1605,G__StPileupUtil_Cint_259_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_centrality9",1559,G__StPileupUtil_Cint_259_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_centralityWeight",2118,G__StPileupUtil_Cint_259_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPileupEPD",1060,G__StPileupUtil_Cint_259_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' option", "0 = default, 1 = 50% pileup rejection, 2 = 80%, 3 = 90%", (void*) NULL, 0);
   G__memfunc_setup("get_refMultPrim",1558,G__StPileupUtil_Cint_259_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nmipsum",1192,G__StPileupUtil_Cint_259_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nch",728,G__StPileupUtil_Cint_259_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nchBin_a",1201,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nchBin_b",1202,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodEvent",1127,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "U 'StPicoEvent' - 10 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodTrackRefMultPrim",2225,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 8, 
"U 'StPicoTrack' - 10 - ptrk U 'StPicoDst' - 10 - pico", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodTrackNch",1395,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 8, 
"U 'StPicoTrack' - 10 - ptrk U 'StPicoDst' - 10 - pico", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofBeta",997,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 2, 1, 4, 8, 
"U 'StPicoTrack' - 50 - trk U 'StPicoDst' - 10 - pico", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StPileupUtil_Cint_259_0_18, 85, G__get_linked_tagnum(&G__StPileupUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StPileupUtil::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StPileupUtil_Cint_259_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPileupUtil::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StPileupUtil_Cint_259_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StPileupUtil::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StPileupUtil_Cint_259_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StPileupUtil::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StPileupUtil_Cint_259_0_22, 85, G__get_linked_tagnum(&G__StPileupUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StPileupUtil_Cint_259_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StPileupUtil_Cint_259_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StPileupUtil_Cint_259_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StPileupUtil_Cint_259_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPileupUtil::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StPileupUtil_Cint_259_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPileupUtil::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StPileupUtil_Cint_259_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPileupUtil::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StPileupUtil_Cint_259_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPileupUtil::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StPileupUtil", 1236, G__StPileupUtil_Cint_259_0_30, (int) ('i'), G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil), -1, 0, 1, 1, 1, 0, "u 'StPileupUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StPileupUtil", 1362, G__StPileupUtil_Cint_259_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StPileupUtil_Cint_259_0_32, (int) ('u'), G__get_linked_tagnum(&G__StPileupUtil_CintLN_StPileupUtil), -1, 1, 1, 1, 1, 0, "u 'StPileupUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStPileupUtil_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStPileupUtil_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStPileupUtil_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StPileupUtil_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_StEpdGeom = { "StEpdGeom" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_StPicoDst = { "StPicoDst" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_StPicoEvent = { "StPicoEvent" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_StPicoTrack = { "StPicoTrack" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_StPileupUtil = { "StPileupUtil" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStPileupUtil_Cint() {
  G__StPileupUtil_CintLN_TClass.tagnum = -1 ;
  G__StPileupUtil_CintLN_TBuffer.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMemberInspector.tagnum = -1 ;
  G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_StEpdGeom.tagnum = -1 ;
  G__StPileupUtil_CintLN_TH1F.tagnum = -1 ;
  G__StPileupUtil_CintLN_StPicoDst.tagnum = -1 ;
  G__StPileupUtil_CintLN_StPicoEvent.tagnum = -1 ;
  G__StPileupUtil_CintLN_StPicoTrack.tagnum = -1 ;
  G__StPileupUtil_CintLN_StPileupUtil.tagnum = -1 ;
  G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStPileupUtil_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_StEpdGeom);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_StPicoDst);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_StPicoEvent);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_StPicoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_StPileupUtil),sizeof(StPileupUtil),-1,263424,(char*)NULL,G__setup_memvarStPileupUtil,G__setup_memfuncStPileupUtil);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StPileupUtil_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupStPileupUtil_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStPileupUtil_Cint()");
  G__set_cpp_environmentStPileupUtil_Cint();
  G__cpp_setup_tagtableStPileupUtil_Cint();

  G__cpp_setup_inheritanceStPileupUtil_Cint();

  G__cpp_setup_typetableStPileupUtil_Cint();

  G__cpp_setup_memvarStPileupUtil_Cint();

  G__cpp_setup_memfuncStPileupUtil_Cint();
  G__cpp_setup_globalStPileupUtil_Cint();
  G__cpp_setup_funcStPileupUtil_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStPileupUtil_Cint();
  return;
}
class G__cpp_setup_initStPileupUtil_Cint {
  public:
    G__cpp_setup_initStPileupUtil_Cint() { G__add_setup_func("StPileupUtil_Cint",(G__incsetup)(&G__cpp_setupStPileupUtil_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStPileupUtil_Cint() { G__remove_setup_func("StPileupUtil_Cint"); }
};
G__cpp_setup_initStPileupUtil_Cint G__cpp_setup_initializerStPileupUtil_Cint;

